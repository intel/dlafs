#!/bin/bash
source /opt/intel/openvino_2020.3.194/bin/setupvars.sh
export LD_LIBRARY_PATH=`python3 -c "LD_LIBRARY_PATH = '$LD_LIBRARY_PATH'; entries = LD_LIBRARY_PATH.split(':'); ix = sum([0 if 'opencv' not in entry else ix for ix, entry in enumerate(entries)]); del entries[ix]; LD_LIBRARY_PATH = ':'.join(entries); print(LD_LIBRARY_PATH);"`
export LD_LIBRARY_PATH=`python3 -c "LD_LIBRARY_PATH = '$LD_LIBRARY_PATH'; entries = LD_LIBRARY_PATH.split(':'); ix = sum([0 if 'gstreamer' not in entry else ix for ix, entry in enumerate(entries)]); del entries[ix]; LD_LIBRARY_PATH = ':'.join(entries); print(LD_LIBRARY_PATH);"`
export PATH=`python3 -c "PATH = '$PATH'; entries = PATH.split(':'); ix = sum([0 if 'gstreamer-1.0' not in entry else ix for ix, entry in enumerate(entries)]); del entries[ix]; PATH = ':'.join(entries); print(PATH);"`
export PATH=`python3 -c "PATH = '$PATH'; entries = PATH.split(':'); ix = sum([0 if 'gstreamer' not in entry else ix for ix, entry in enumerate(entries)]); del entries[ix]; PATH = ':'.join(entries); print(PATH);"`
unset GST_PLUGIN_PATH
unset GST_VAAPI_ALL_DRIVERS
unset GI_TYPELIB_PATH
unset LIBRARY_PATH
unset GST_SAMPLES_DIR
unset GST_PLUGIN_SCANNER
unset PKG_CONFIG_PATH

export dlafs_root=`realpath ../..`
rm -rf $dlafs_root/test/libgstcvdl
mkdir $dlafs_root/test/libgstcvdl
export HDDLS_CVDL_PATH=$dlafs_root/test/libgstcvdl
cp -r $dlafs_root/gstreamer_plugins/gstreamer_plugin_openVINO/gst-libs/ocl/kernels $HDDLS_CVDL_PATH
cp $dlafs_root/gstreamer_plugins/gstreamer_plugin_openVINO/gst-libs/resources/svm_model.xml $HDDLS_CVDL_PATH
cp $dlafs_root/gstreamer_plugins/gstreamer_plugin_openVINO/gst-libs/algo/algoregister.h $HDDLS_CVDL_PATH
cp $dlafs_root/gstreamer_plugins/gstreamer_plugin_openVINO/gst-libs/algo/exinferdata.h $HDDLS_CVDL_PATH
cp $dlafs_root/gstreamer_plugins/gstreamer_plugin_openVINO/gst-libs/algo/exinferenceparser.h $HDDLS_CVDL_PATH

export LIBVA_DRIVER_NAME=iHD
export HDDL_PLUGIN=GPU
export HDDLS_CVDL_MODEL_PATH=$dlafs_root/test/models
export HDDLS_CVDL_KERNEL_PATH=$HDDLS_CVDL_PATH/kernels
